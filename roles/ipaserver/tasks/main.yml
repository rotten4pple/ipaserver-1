---
- name: Ensure software is installed (yum), this might take several minutes
  yum: name={{ item }} state=present
  with_items: '{{ipaserver_packages}}'
  

- name: force uninstall is true, uninstall ipa-server-
  command: ipa-server-install --uninstall -U
  ignore_errors: yes
  when: force_uninstall
  
- name: Run the ipaserver installer, this will take several minutes, go take a coffee break..
  action: command
    {{ ipaserver_base_command }}
    --realm {{ ipaserver_realm }}
    --domain {{ ipaserver_domain }}
    -a {{ ipaserver_admin_password }}
    -p {{ ipaserver_dir_admin_password }}
    --hostname={{ ansible_hostname }}.{{ipaserver_domain}}
    --ip-address={{ ansible_eth0.ipv4.address }}
    {{ '--idstart=%s' % ipaserver_idstart if ipaserver_idstart | default(False) else '' }}
    {{ '--idmax=%s' % ipaserver_idmax if ipaserver_idmax | default(False) else '' }}
    {{ '--forwarder=%s' % ipaserver_dns_forwarder
       if ipaserver_dns_forwarder | default(False) else '--no-forwarders' }}
    {{ '--mkhomedir' if ipaserver_mkhomedir | default(True) else '' }}
    {{ '--setup-dns' if ipaserver_setup_dns | default(True) else '' }}
    {{ '--ssh-trust-dns' if ipaserver_ssh_trust_dns | default(True) else '' }}
    {{ '' if ipaserver_hbac_allow | default(True) else '--no_hbac_allow' }}
    {{ '' if ipaserver_setup_ntp | default(True) else '--no-ntp' }}
    {{ '' if ipaserver_configure_ssh | default(True) else '--no-ssh' }}
    {{ '' if ipaserver_configure_sshd | default(True) else '--no-sshd' }}
    {{ '' if ipaserver_ui_redirect | default(True) else '--no-ui-redirect' }}
    creates=/etc/ipa/default.conf

- name: Create the rndc configuration file and key
  command: "{{item}}"
  with_items:
   - /usr/sbin/rndc-confgen -a
   - /sbin/restorecon /etc/rndc.key
   - chown root:named /etc/rndc.key
   - chmod 0640 /etc/rndc.key

- name: Add localhost mapping to host.domain for httpd cert to match.
  lineinfile:
    dest=/etc/hosts
    regexp="^127\.0\.0\.1"
    line="127.0.0.1 {{ ansible_hostname }}.{{ipaserver_domain}}"
    state=present
    owner=root
    group=root
    mode=0644
    
- name: create Migrate.sh to migrate users/groups from another freeIPA to this one
  tags:
    - migrate
  lineinfile:
    dest={{migrateCmdFile}}
    regexp="{{item}}"
    line="{{item}}"
    owner=root
    group=root
    mode=0755
    create=True
  with_items:
    - echo {{ vault_ipaserver_admin_password }} | kinit admin
    - ipa config-mod --enable-migration=TRUE
    - echo {{migrateSrc_ipa_dir_admin_password}} | {{ migrateCmd }}{{migrateSrc_host}}
  when: migrate_enable
    

- name: run migrate.sh, this might take a while
  tags:
    - migrate
  command: "{{item}}"
  with_items:
   - sh {{migrateCmdFile}}
  when: migrate_enable
